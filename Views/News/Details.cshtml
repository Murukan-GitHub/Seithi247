@model Seithi247.Models.News

<div class="news-article-full">
    <article class="news-article shadow-sm">
        <!-- Header -->
        <header class="article-header">
            <h1 class="article-title">@Model.Title</h1>
            <div class="article-meta">
                <span class="article-author">By <strong>@Model.Author</strong></span> |
                <span class="article-date">@Model.PublishedAt.ToString("MMMM dd, yyyy")</span>
            </div>
        </header>
        <!-- Like & Share -->
        <div class="article-actions mt-5">
            <div class="article-likes">
                <button class="like-btn" data-id="@Model.Id">👍 Like (<span class="like-count">@Model.Likes</span>)</button>
            </div>

            <div class="article-share">
                <span>Share:</span>
                <a href="https://www.facebook.com/sharer/sharer.php?u=@Url.Action("Details", "News", new { id = Model.Id }, Context.Request.Scheme)" target="_blank" class="fb-share">Facebook</a>
                <a href="https://twitter.com/intent/tweet?url=@Url.Action("Details", "News", new { id = Model.Id }, Context.Request.Scheme)&text=@Model.Title" target="_blank" class="tw-share">Twitter</a>
            </div>
        </div>
        @*         <!-- feature image -->
        @if (!string.IsNullOrEmpty(Model.FeatureImage))
        {
            <div class="article-image">
                <img src="@Url.Content(Model.FeatureImage)" alt="@Model.Title" />
            </div>
        } *@

        <section class="article-content">
            @Html.Raw(Model.Content)
        </section>
        @if (Model.Images != null && Model.Images.Any())
        {
            var count = Model.Images.Count;
            <div class="row g-2">
                @for (int i = 0; i < Math.Min(count, 4); i++)
                {
                    var img = Model.Images.ElementAt(i);
                    <div class="@(count == 1 ? "col-12"
                                                                                                                                                         : count == 2 ? "col-6"
                                                                                                                                                         : count == 3 && i == 0 ? "col-12"
                                                                                                                                                         : count == 3 && i > 0 ? "col-6"
                                                                                                                                                         : "col-6")">
                    <div class="position-relative">
                        <a data-fancybox="gallery" href="@img.FilePath">
                            <img src="@img.FilePath"
                                 class="img-fluid rounded shadow-sm"
                                 style="cursor:pointer; object-fit:cover; height:@(count == 1 ? "400px" : "200px"); width:100%;" />
                        </a>

                        @if (i == 3 && count > 4)
                        {
                            <a data-fancybox="gallery" href="@img.FilePath">
                                <div class="position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center bg-dark bg-opacity-75 text-white fs-3 fw-bold"
                                     style="cursor:pointer;">
                                    +@(count - 3)
                                </div>
                            </a>
                        }
                    </div>
                </div>
            }

            <!-- Hidden extra images for Fancybox -->
            @for (int j = 4; j < count; j++)
            {
                @if (j <= Model.Images.Count)
                {
                    var hiddenImg = Model.Images.ElementAt(j);
                    <a data-fancybox="gallery" href="@hiddenImg.FilePath" style="display:none;"></a>
                }
            }
        </div>
                }

        <!-- Video Section -->
        @foreach (var v in Model.NewsMedias)
        {
            @if (!string.IsNullOrEmpty(@v.MediaUrl))
            {
                <div class="article-video">
                    <iframe width="100%" height="400"
                            src="@GetEmbedUrl(@v.MediaUrl)"
                            frameborder="0"
                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                            allowfullscreen>
                    </iframe>
                </div>
            }
        }
        <!-- Comment Section -->
        <div class="comment-box">
            <h5>Leave a Comment</h5>
            <form id="commentForm">
                <input type="hidden" name="newsId" value="@Model.Id" />
                <div class="mb-2">
                    <input type="text" name="authorName" placeholder="Your name" class="form-control" />
                </div>
                <div class="mb-2">
                    <textarea name="text" rows="3" placeholder="Your comment..." class="form-control" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Post Comment</button>
            </form>
        </div>

        <div id="commentsList">
            @await Html.PartialAsync("_CommentsList", Model.Comments?.OrderByDescending(c => c.PostedDate))
        </div>
    </article>
</div>

@functions {
    public string GetEmbedUrl(string VideoUrl)
    {
        string videoUrl = VideoUrl;
        if (!string.IsNullOrEmpty(videoUrl))
        {
            if (videoUrl.Contains("watch?v="))
                videoUrl = videoUrl.Replace("watch?v=", "embed/");
            else if (videoUrl.Contains("youtu.be/"))
                videoUrl = videoUrl.Replace("youtu.be/", "www.youtube.com/embed/");
            else if (videoUrl.Contains("youtube.com/shorts/"))
                videoUrl = videoUrl.Replace("youtube.com/shorts/", "youtube.com/embed/");
        }
        return videoUrl;
    }
}

@section Scripts {

    <script>


         $(document).on("click", ".react-btn", function () {

             var commentId = $(this).data("comment");
             var emoji = $(this).data("emoji");
             $.post("/News/ReactToComment", { commentId, emoji }, function (data) {
                 let summaryText = data.map(r => `${r.emoji} ${r.count}`).join(" ");
                 $("#reaction-summary-" + commentId).text(summaryText);
             }).fail(function () {
                 alert("Error reacting to comment.");
             });
         });

         let selectedReaction = "";
        $(document).on("click", ".like-btn", function () {
             const btn = $(this);
             const id = btn.data("id");
             $.post("/News/Like", {id: id }, function (data) {
                 if (data.success) btn.find(".like-count").text(data.likes);
             });
         });

         $("#commentForm").submit(function (e) {
             e.preventDefault();
             $.post("/News/AddComment", $(this).serialize(), function (html) {
                 $("#commentsList").html(html);
                 $("#commentForm textarea").val("");
             });
         });
    </script>
}